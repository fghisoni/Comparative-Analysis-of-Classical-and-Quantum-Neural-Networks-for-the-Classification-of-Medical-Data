/home/ghisoni/quantum_computing/medical_qnn/final/quantum/dropout/angle/ce_angle.py:23: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  data['Sex'].replace(['M', 'F'],
/home/ghisoni/quantum_computing/medical_qnn/final/quantum/dropout/angle/ce_angle.py:23: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  data['Sex'].replace(['M', 'F'],
/home/ghisoni/quantum_computing/medical_qnn/final/quantum/dropout/angle/ce_angle.py:26: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  data['ExerciseAngina'].replace(['N', 'Y'],
/home/ghisoni/quantum_computing/medical_qnn/final/quantum/dropout/angle/ce_angle.py:26: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  data['ExerciseAngina'].replace(['N', 'Y'],
/home/ghisoni/quantum_computing/medical_qnn/final/quantum/dropout/angle/ce_angle.py:29: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  data['ChestPainType'].replace(['ATA', 'NAP', 'ASY', 'TA'], [0,1,2,3], inplace=True)
/home/ghisoni/quantum_computing/medical_qnn/final/quantum/dropout/angle/ce_angle.py:29: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  data['ChestPainType'].replace(['ATA', 'NAP', 'ASY', 'TA'], [0,1,2,3], inplace=True)
/home/ghisoni/quantum_computing/medical_qnn/final/quantum/dropout/angle/ce_angle.py:31: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  data['RestingECG'].replace(['Normal', 'ST', 'LVH'], [0,1,2], inplace=True)
/home/ghisoni/quantum_computing/medical_qnn/final/quantum/dropout/angle/ce_angle.py:31: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  data['RestingECG'].replace(['Normal', 'ST', 'LVH'], [0,1,2], inplace=True)
/home/ghisoni/quantum_computing/medical_qnn/final/quantum/dropout/angle/ce_angle.py:33: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  data['ST_Slope'].replace(['Up', 'Flat', 'Down'], [0,1,2], inplace=True)
/home/ghisoni/quantum_computing/medical_qnn/final/quantum/dropout/angle/ce_angle.py:33: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  data['ST_Slope'].replace(['Up', 'Flat', 'Down'], [0,1,2], inplace=True)
No GPU/TPU found, falling back to CPU. (Set TF_CPP_MIN_LOG_LEVEL=0 and rerun for more info.)
slurmstepd: error: *** JOB 565102 ON fn09 CANCELLED AT 2025-03-10T16:56:43 ***
2025-03-11 08:13:39.579910: E external/xla/xla/service/slow_operation_alarm.cc:133] The operation took 20h57m2.915017837s

********************************
[Compiling module jit_optimizer_update] Very slow compile? If you want to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
********************************
2025-03-11 09:54:39.466541: E external/xla/xla/service/slow_operation_alarm.cc:133] The operation took 22h58m2.677117736s

********************************
[Compiling module jit_optimizer_update] Very slow compile? If you want to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
********************************
2025-03-11 11:56:51.530660: E external/xla/xla/service/slow_operation_alarm.cc:133] The operation took 25h30.990639348s

********************************
[Compiling module jit_optimizer_update] Very slow compile? If you want to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
********************************
2025-03-11 12:36:51.821841: E external/xla/xla/service/slow_operation_alarm.cc:133] The operation took 25h37m57.35376644s

********************************
[Compiling module jit_optimizer_update] Very slow compile? If you want to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
********************************
2025-03-11 12:39:42.460454: E external/xla/xla/service/slow_operation_alarm.cc:133] The operation took 25h17m58.920320409s

********************************
[Compiling module jit_optimizer_update] Very slow compile? If you want to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
********************************
2025-03-11 14:17:09.924921: E external/xla/xla/service/slow_operation_alarm.cc:133] The operation took 27h20m54.803762091s

********************************
[Compiling module jit_optimizer_update] Very slow compile? If you want to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
********************************
2025-03-11 16:43:15.704352: E external/xla/xla/service/slow_operation_alarm.cc:133] The operation took 29h46m55.677540142s

********************************
[Compiling module jit_optimizer_update] Very slow compile? If you want to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
********************************
2025-03-11 22:11:05.716602: E external/xla/xla/service/slow_operation_alarm.cc:133] The operation took 30h4m28.504648016s

********************************
[Compiling module jit_optimizer_update] Very slow compile? If you want to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
********************************
